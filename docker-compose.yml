# WORKS OUT OF THE BOX.

version: "3.8"

services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: unless-stopped
    privileged: true
    # traefik will be using the socket at 2375 instead of unix:///var/run/docker.sock
    ports:
      - 2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # disable unnecesary API endpoints as required
    environment:
      # ref: https://github.com/traefik/traefik/issues/4174#issuecomment-634450865
      # BUILD: 1
      # COMMIT: 1
      # CONFIGS: 1
      CONTAINERS: 1
      # DISTRIBUTION: 1
      # EXEC: 1
      # IMAGES: 1
      # INFO: 1
      NETWORKS: 1
      # NODES: 1
      # PLUGINS: 1
      SERVICES: 1
      # SESSION: 1
      # SWARM: 1
      # SYSTEM: 1
      TASKS: 1
      VOLUMES: 1
    # never connect to the outside world
    networks:
      docker-proxy-internal-net:

  # ensure the socket proxy is being used with:
  # sudo nsenter -t $(docker inspect -f '{{.State.Pid}}' <container_name>) -n netstat
  # # Proto Recv-Q Send-Q Local Address           Foreign Address         State
  # # tcp        0      0 172.18.0.3:53806        172.18.0.2:2375         ESTABLISHED
  traefik:
    depends_on:
      - socket-proxy
    image: traefik:v2.5.4
    restart: unless-stopped
    command:
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
    container_name: traefik
    networks:
      docker-proxy-internal-net:
      traefik-net:

    ports:
      - 80:80
      - 443:443
      - 8080:8080
    security_opt:
      - no-new-privileges:true
    #? traefik labels -> Dynamic configuration
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-net
      - traefik.http.routers.api-internal=true
      - traefik.http.routers.api-internal.tls=true
      - traefik.http.routers.api-internal.service=api@internal
      # TODO FIX
      - traefik.http.routers.api-internal.middlewares=auth,stripprefix
      - traefik.http.routers.api-internal.rule=Host(`int.locahost`) && PathPrefix(`/api-internal`)
      - traefik.http.middlewares.stripprefix.stripprefix.prefixes=/api-internal
      - traefik.http.routers.api-internal.priority=999
      - traefik.http.services.api-internal.loadbalancer.server.port=8080
    volumes:
      - ./traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./dynamic_conf.yaml:/etc/traefik/dynamic_conf.yaml:ro
  wfm_backend:
    image: wfm-backend:latest # Use development instead of latest for development version
    container_name: wfm-backend
    networks:
      - traefik-net
    ports:
      - 3001:3001
    expose:
      - 3001
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back:/back
        - /back/node_modules
    environment:
      - ACCESS_TOKEN_SECRET=supersecret
      - REFRESH_TOKEN_SECRET=df6+g465d4te5e
      - NODE_ENV=development
      - POSTGRES_USER=wfm_admin
      - POSTGRES_PASS=admin123
      - POSTGRES_DB=wfm
      - POSTGRES_HOST=wfm_db
      - POSTGRES_PORT_BE=5432
      - BACKEND_PORT=3001
      - SERVER_PORT_DEV=8036
      - REACT_APP_BACKEND_HOST=wfm-backend
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    labels:
      - traefik.enable=true
      - traefik.http.routers.wfm.middlewares=test-compress #, #stripprefix
      - traefik.http.routers.wfm.rule=Host(`back.localhost`) #&& PathPrefix("/internal")
      - traefik.http.middlewares.test-compress.compress=true
      #- traefik.http.middlewares.stripprefix.prefixes=/internal
      - traefik.docker.network=traefik-net
      - traefik.http.routers.wfm.entrypoints=websecure
      - traefik.http.routers.wfm.tls=true
      - traefik.http.services.wfm.loadbalancer.server.port=3001

  frontend:
    image: wfm-frontend-dev:latest
    container_name: frontend_wfm_dev
    networks:
      - traefik-net
    ports:
      - 3000:3000
    expose:
      - 3000
    build:
      context: ./my-app
      dockerfile: Dockerfile
    volumes:
      - ./my-app:/my-app
        - './my-app/node_modules'
    environment:
      - WATCHPACK_POLLING=true
      - REACT_APP_BACKEND_PORT=3001
      - REACT_APP_FRONTEND_PORT=3000
      - REACT_APP_WIKI_URL=
      - REACT_APP_FTRS_URL=
      - REACT_APP_WFM_URL=
      - REACT_APP_BACKEND_HOST=arena-staging2.altran.com
    labels:
      - traefik.enable=true
      - traefik.http.routers.wfm-front.rule=Host(`front.localhost`) #&& PathPrefix("/ui")
      - traefik.http.routers.wfm-front.middlewares=test-compress #, stripprefix-ui
      - traefik.http.middlewares.test-compress.compress=true
      #- traefik.http.middlewares.stripprefix-ui.prefixes=/ui
      #- traefik.http.middlewares.strip_prefix.stripprefix.prefixes=/graphql
      - traefik.docker.network=traefik-net
      - traefik.http.routers.wfm-front.entrypoints=websecure
      - traefik.http.routers.wfm-front.tls=true
      - traefik.http.services.wfm-front.loadbalancer.server.port=3000

volumes:
  wfm-pgdata:

# we have to repeat the same network parameters as in the other compose...
networks:
  # docker network create traefik-net (bridge by default)
  traefik-net:
    name: traefik-net
    external: false
  docker-proxy-internal-net:
    name: docker-proxy-internal-net
    external: false
    # don't confuse with external key (i.e. network created manually)
    internal: true
